#!/usr/bin/env bash

set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}
export_env_dir $ENV_DIR
NEW_BUILD_DIR="$BUILD_DIR/$SUBDIR"

# download the buildpack

NODE_BUILDPACK=${NODE_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/nodejs.tgz}
mkdir -p /tmp/nodejs
curl --silent --location $NODE_BUILDPACK | tar xzm -C /tmp/nodejs --strip-components=1 --warning=no-unknown-keyword

echo "/tmp/nodejs/bin/detect $NEW_BUILD_DIR $CACHE_DIR $ENV_DIR"
/tmp/nodejs/bin/detect $NEW_BUILD_DIR $CACHE_DIR $ENV_DIR
echo "/tmp/nodejs/bin/compile $NEW_BUILD_DIR $CACHE_DIR $ENV_DIR"
/tmp/nodejs/bin/compile $NEW_BUILD_DIR $CACHE_DIR $ENV_DIR
source /tmp/nodejs/export

cd $BUILD_DIR/ember-orchard
echo "Installing ember-orchard dependencies"
yarn install

cd $BUILD_DIR/$SUBDIR
echo "Installing $SUBDIR dependencies"
yarn install

ember deploy production
ember build --environment production
cp Procfile ..
mv .profile.d ..
cd $BUILD_DIR

echo "export PATH=\"\$HOME/$SUBDIR/.heroku/node/bin:\$HOME/$SUBDIR/.heroku/yarn/bin:$PATH:\$HOME/$SUBDIR/bin:\$HOME/$SUBDIR/node_modules/.bin\"" > "$BUILD_DIR/.profile.d/nodejs.sh"
echo "export NODE_HOME=\"\$HOME/$SUBDIR/.heroku/node\"" >> "$BUILD_DIR/.profile.d/nodejs.sh"
echo 'export NODE_ENV=${NODE_ENV:-production}' >> "$BUILD_DIR/.profile.d/nodejs.sh"
exit 0
